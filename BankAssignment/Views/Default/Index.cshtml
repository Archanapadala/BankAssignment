@model BankAssignment.Models.Info
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm("Index", "Default", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table>
        <tr>
            <td>
                @Html.Label("Enter Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </td>
            <td>
                <input type="submit" value="Get Data" class="btn btn-default" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Current Balance", htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.TextBox("Current Balance", (string)ViewBag.availBal,
    htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly", @id = "availBal" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Enter Transaction Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.TextBox("TransactionAmount", "", htmlAttributes: new { @class = "form-control" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Select Transaction Mode", htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.RadioButton("Mode", "Deposit", new { @id = "Deposit" }) Deposit

                @Html.RadioButton("Mode", "Withdraw", new { @id = "Withdraw" }) Withdraw
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <input type="submit" value="Calculate" class="btn btn-default" onclick="calculateBalance(event)" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.Label("Net Balance Is", htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.TextBox("NetBalance", "", new { @class = "form-control", @readonly = "readonly" })
            </td>
        </tr>
    </table>
    <table>
        <tr>
            <td>
                <span id="Denied" style="color:red;"></span>
            </td>
        </tr>
    </table>
</div>
}
<script>
    function calculateBalance(event) {
        event.preventDefault();
        var availBal = parseFloat(document.getElementById("availBal").value);
        var TransactionAmount = parseFloat(document.getElementById("TransactionAmount").value);
        var netBalance = availBal;
        if (document.getElementById("Deposit").checked) {
            netBalance += TransactionAmount;
        }
        else if (document.getElementById("Withdraw").checked) {
            if (TransactionAmount < availBal) {
                document.getElementById("Denied").innerText = "";
                netBalance -= TransactionAmount;
            }
            else {
                netBalance = 0;
                document.getElementById("Denied").innerText = "Transaction amount should be less than current Balance on Withdraw";
            }
        }
        document.getElementById("NetBalance").value = netBalance.toFixed(2);
    }
</script>



